/**
 * This class is generated by jOOQ
 */
package com.common.generated.tables;


import com.common.generated.Keys;
import com.common.generated.Recruit;
import com.common.generated.tables.records.BookRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Book extends TableImpl<BookRecord> {

	private static final long serialVersionUID = 1785938483;

	/**
	 * The reference instance of <code>recruit.book</code>
	 */
	public static final Book BOOK = new Book();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BookRecord> getRecordType() {
		return BookRecord.class;
	}

	/**
	 * The column <code>recruit.book.id</code>. 主键Id
	 */
	public final TableField<BookRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键Id");

	/**
	 * The column <code>recruit.book.user_id</code>. 用户Id
	 */
	public final TableField<BookRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户Id");

	/**
	 * The column <code>recruit.book.type</code>. 目标类型（1 商机 ）
	 */
	public final TableField<BookRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "目标类型（1 商机 ）");

	/**
	 * The column <code>recruit.book.target_id</code>. 目标Id
	 */
	public final TableField<BookRecord, Integer> TARGET_ID = createField("target_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "目标Id");

	/**
	 * The column <code>recruit.book.reason</code>. 原因
	 */
	public final TableField<BookRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "原因");

	/**
	 * The column <code>recruit.book.description</code>. 详情
	 */
	public final TableField<BookRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "详情");

	/**
	 * The column <code>recruit.book.status</code>. 状态（0 未处理，1 已处理，2 无效）
	 */
	public final TableField<BookRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "状态（0 未处理，1 已处理，2 无效）");

	/**
	 * The column <code>recruit.book.handle_result</code>. 处理结果
	 */
	public final TableField<BookRecord, String> HANDLE_RESULT = createField("handle_result", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "处理结果");

	/**
	 * The column <code>recruit.book.create_time</code>. 创建时间
	 */
	public final TableField<BookRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>recruit.book.auditor</code>. 审核人
	 */
	public final TableField<BookRecord, Integer> AUDITOR = createField("auditor", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "审核人");

	/**
	 * The column <code>recruit.book.info_deal</code>. 1:关闭信息;2:删除信息
	 */
	public final TableField<BookRecord, Byte> INFO_DEAL = createField("info_deal", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "1:关闭信息;2:删除信息");

	/**
	 * The column <code>recruit.book.audit_time</code>. 审核时间
	 */
	public final TableField<BookRecord, Timestamp> AUDIT_TIME = createField("audit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核时间");

	/**
	 * The column <code>recruit.book.merchant_mobile</code>. 商家账号处理 0：不处理 1：处理
	 */
	public final TableField<BookRecord, Byte> MERCHANT_MOBILE = createField("merchant_mobile", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "商家账号处理 0：不处理 1：处理");

	/**
	 * The column <code>recruit.book.publish_mobile</code>. 发布者账号处理 0：不处理 1：处理
	 */
	public final TableField<BookRecord, Byte> PUBLISH_MOBILE = createField("publish_mobile", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "发布者账号处理 0：不处理 1：处理");

	/**
	 * Create a <code>recruit.book</code> table reference
	 */
	public Book() {
		this("book", null);
	}

	/**
	 * Create an aliased <code>recruit.book</code> table reference
	 */
	public Book(String alias) {
		this(alias, BOOK);
	}

	private Book(String alias, Table<BookRecord> aliased) {
		this(alias, aliased, null);
	}

	private Book(String alias, Table<BookRecord> aliased, Field<?>[] parameters) {
		super(alias, Recruit.RECRUIT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BookRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BOOK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BookRecord> getPrimaryKey() {
		return Keys.KEY_BOOK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BookRecord>> getKeys() {
		return Arrays.<UniqueKey<BookRecord>>asList(Keys.KEY_BOOK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Book as(String alias) {
		return new Book(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Book rename(String name) {
		return new Book(name, null);
	}
}
