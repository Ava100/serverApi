/**
 * This class is generated by jOOQ
 */
package com.common.generated.tables;


import com.common.generated.Keys;
import com.common.generated.Recruit;
import com.common.generated.tables.records.TaskConfigRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskConfig extends TableImpl<TaskConfigRecord> {

	private static final long serialVersionUID = -103472300;

	/**
	 * The reference instance of <code>recruit.task_config</code>
	 */
	public static final TaskConfig TASK_CONFIG = new TaskConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskConfigRecord> getRecordType() {
		return TaskConfigRecord.class;
	}

	/**
	 * The column <code>recruit.task_config.id</code>. 主键
	 */
	public final TableField<TaskConfigRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");

	/**
	 * The column <code>recruit.task_config.biz_code</code>. 业务code
	 */
	public final TableField<TaskConfigRecord, String> BIZ_CODE = createField("biz_code", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "业务code");

	/**
	 * The column <code>recruit.task_config.full_class</code>.
	 */
	public final TableField<TaskConfigRecord, String> FULL_CLASS = createField("full_class", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>recruit.task_config.create_time</code>. 创建时间
	 */
	public final TableField<TaskConfigRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>recruit.task_config.corn</code>. corn表达式
	 */
	public final TableField<TaskConfigRecord, String> CORN = createField("corn", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "corn表达式");

	/**
	 * The column <code>recruit.task_config.name</code>. 名称
	 */
	public final TableField<TaskConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "名称");

	/**
	 * The column <code>recruit.task_config.group_name</code>. 所属组
	 */
	public final TableField<TaskConfigRecord, String> GROUP_NAME = createField("group_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "所属组");

	/**
	 * The column <code>recruit.task_config.trigger_name</code>.
	 */
	public final TableField<TaskConfigRecord, String> TRIGGER_NAME = createField("trigger_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>recruit.task_config.update_time</code>. 更新时间
	 */
	public final TableField<TaskConfigRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * The column <code>recruit.task_config.status</code>. 0:正常运行;1:删除;2:停止运行
	 */
	public final TableField<TaskConfigRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:正常运行;1:删除;2:停止运行");

	/**
	 * Create a <code>recruit.task_config</code> table reference
	 */
	public TaskConfig() {
		this("task_config", null);
	}

	/**
	 * Create an aliased <code>recruit.task_config</code> table reference
	 */
	public TaskConfig(String alias) {
		this(alias, TASK_CONFIG);
	}

	private TaskConfig(String alias, Table<TaskConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskConfig(String alias, Table<TaskConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Recruit.RECRUIT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TaskConfigRecord, Long> getIdentity() {
		return Keys.IDENTITY_TASK_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskConfigRecord> getPrimaryKey() {
		return Keys.KEY_TASK_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskConfigRecord>>asList(Keys.KEY_TASK_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfig as(String alias) {
		return new TaskConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskConfig rename(String name) {
		return new TaskConfig(name, null);
	}
}
